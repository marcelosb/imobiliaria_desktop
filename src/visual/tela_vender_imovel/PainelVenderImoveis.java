package visual.tela_vender_imovel;

/*import controle.ClienteControl;*/
import controle.CorretorControl;
import controle.Dados;
/*import controle.ImovelControl;*/
import controle.VenderImovelControl;
import java.awt.Color;
import java.text.DecimalFormat;
import java.util.Calendar;
import javax.swing.border.LineBorder;
import modelo.ClientePessoaResumoBean;
import modelo.CorretorBean;
import modelo.ImovelBean;
import modelo.VenderImovelBean;
import util.Command;
import util.TeclasPermitidasParaData;
import visual.tela_principal.TelaPrincipalDoSistema;
import static visual.tela_principal.TelaPrincipalDoSistema.botaoBuscarVendaDeImovel;
import static visual.tela_principal.TelaPrincipalDoSistema.facade;

/**
 * @author Marcelo Henrique
 */
public class PainelVenderImoveis extends javax.swing.JPanel implements Command{

    Calendar c = Calendar.getInstance();

    public PainelVenderImoveis() {
        initComponents();
        selecionarCorretores();
        selecionarImoveisDisponiveisParaVenda();
        selecionarClientes();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        botaoGrupoContrato = new javax.swing.ButtonGroup();
        botaoGrupoPeriodo = new javax.swing.ButtonGroup();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        campoSelecioneImovelDaVenda = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        botaoVenderImovel = new javax.swing.JButton();
        botaoLimparCamposDaVenda = new javax.swing.JButton();
        campoSelecioneCorretorDaVenda = new javax.swing.JComboBox<>();
        campoValorNegociadoDaVenda = new javax.swing.JTextField();
        txtDataEntega = new javax.swing.JLabel();
        campoAnoDataDaVenda = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        campoSelecioneClienteDaCompra = new javax.swing.JComboBox<>();
        campoDiaDataDaVenda = new javax.swing.JTextField();
        campoMesDataDaVenda = new javax.swing.JTextField();
        txtDataEntega1 = new javax.swing.JLabel();
        txtDataEntega2 = new javax.swing.JLabel();

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane1.setViewportView(jTextArea1);

        setBackground(new java.awt.Color(255, 255, 255));
        setMaximumSize(new java.awt.Dimension(860, 520));
        setMinimumSize(new java.awt.Dimension(860, 520));
        setPreferredSize(new java.awt.Dimension(860, 520));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        campoSelecioneImovelDaVenda.setFont(new java.awt.Font("Yu Gothic", 0, 18)); // NOI18N
        campoSelecioneImovelDaVenda.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Selecione o código do imovel disponível para venda" }));
        campoSelecioneImovelDaVenda.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(204, 204, 204), 1, true));
        campoSelecioneImovelDaVenda.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                campoSelecioneImovelDaVendaFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                campoSelecioneImovelDaVendaFocusLost(evt);
            }
        });
        campoSelecioneImovelDaVenda.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                campoSelecioneImovelDaVendaActionPerformed(evt);
            }
        });
        add(campoSelecioneImovelDaVenda, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 150, 660, 30));

        jLabel2.setFont(new java.awt.Font("Yu Gothic", 0, 18)); // NOI18N
        jLabel2.setText("Corretor:");
        add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 100, -1, 30));

        jLabel3.setFont(new java.awt.Font("Yu Gothic", 0, 18)); // NOI18N
        jLabel3.setText("Imovel:");
        add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 150, 70, 30));

        jLabel4.setFont(new java.awt.Font("Yu Gothic", 0, 18)); // NOI18N
        jLabel4.setText("Valor Negociado:");
        add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 250, 150, 30));

        botaoVenderImovel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/tela_vender_imovel/botao_vender_imovel.png"))); // NOI18N
        botaoVenderImovel.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        botaoVenderImovel.setMaximumSize(new java.awt.Dimension(150, 40));
        botaoVenderImovel.setMinimumSize(new java.awt.Dimension(150, 40));
        botaoVenderImovel.setPreferredSize(new java.awt.Dimension(150, 40));
        botaoVenderImovel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoVenderImovelActionPerformed(evt);
            }
        });
        add(botaoVenderImovel, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 480, 150, 40));

        botaoLimparCamposDaVenda.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/tela_vender_imovel/botao_limpar_vender_imovel.png"))); // NOI18N
        botaoLimparCamposDaVenda.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        botaoLimparCamposDaVenda.setMaximumSize(new java.awt.Dimension(150, 40));
        botaoLimparCamposDaVenda.setMinimumSize(new java.awt.Dimension(150, 40));
        botaoLimparCamposDaVenda.setPreferredSize(new java.awt.Dimension(150, 40));
        botaoLimparCamposDaVenda.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoLimparCamposDaVendaActionPerformed(evt);
            }
        });
        add(botaoLimparCamposDaVenda, new org.netbeans.lib.awtextra.AbsoluteConstraints(680, 480, 150, 40));

        campoSelecioneCorretorDaVenda.setFont(new java.awt.Font("Yu Gothic", 0, 18)); // NOI18N
        campoSelecioneCorretorDaVenda.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Selecione um corretor" }));
        campoSelecioneCorretorDaVenda.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(204, 204, 204), 1, true));
        campoSelecioneCorretorDaVenda.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                campoSelecioneCorretorDaVendaFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                campoSelecioneCorretorDaVendaFocusLost(evt);
            }
        });
        campoSelecioneCorretorDaVenda.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                campoSelecioneCorretorDaVendaActionPerformed(evt);
            }
        });
        add(campoSelecioneCorretorDaVenda, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 100, 660, 30));

        campoValorNegociadoDaVenda.setEditable(false);
        campoValorNegociadoDaVenda.setBackground(new java.awt.Color(204, 255, 204));
        campoValorNegociadoDaVenda.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        campoValorNegociadoDaVenda.setForeground(new java.awt.Color(0, 153, 51));
        campoValorNegociadoDaVenda.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        campoValorNegociadoDaVenda.setText("R$ 0,00");
        campoValorNegociadoDaVenda.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(204, 204, 204), 1, true));
        campoValorNegociadoDaVenda.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                campoValorNegociadoDaVendaFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                campoValorNegociadoDaVendaFocusLost(evt);
            }
        });
        add(campoValorNegociadoDaVenda, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 250, 200, 30));

        txtDataEntega.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        txtDataEntega.setForeground(new java.awt.Color(204, 204, 204));
        txtDataEntega.setText("/");
        add(txtDataEntega, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 50, -1, 30));

        campoAnoDataDaVenda.setDocument(new TeclasPermitidasParaData());
        campoAnoDataDaVenda.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        campoAnoDataDaVenda.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        campoAnoDataDaVenda.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(204, 204, 204), 1, true));
        campoAnoDataDaVenda.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                campoAnoDataDaVendaFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                campoAnoDataDaVendaFocusLost(evt);
            }
        });
        campoAnoDataDaVenda.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                campoAnoDataDaVendaActionPerformed(evt);
            }
        });
        campoAnoDataDaVenda.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                campoAnoDataDaVendaKeyReleased(evt);
            }
        });
        add(campoAnoDataDaVenda, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 50, 70, 30));

        jLabel6.setFont(new java.awt.Font("Yu Gothic", 0, 18)); // NOI18N
        jLabel6.setText("Cliente:");
        add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 200, 70, 30));

        campoSelecioneClienteDaCompra.setFont(new java.awt.Font("Yu Gothic", 0, 18)); // NOI18N
        campoSelecioneClienteDaCompra.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Selecione um cliente" }));
        campoSelecioneClienteDaCompra.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(204, 204, 204), 1, true));
        campoSelecioneClienteDaCompra.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                campoSelecioneClienteDaCompraFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                campoSelecioneClienteDaCompraFocusLost(evt);
            }
        });
        campoSelecioneClienteDaCompra.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                campoSelecioneClienteDaCompraActionPerformed(evt);
            }
        });
        add(campoSelecioneClienteDaCompra, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 200, 660, 30));

        campoDiaDataDaVenda.setDocument(new TeclasPermitidasParaData());
        campoDiaDataDaVenda.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        campoDiaDataDaVenda.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        campoDiaDataDaVenda.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(204, 204, 204), 1, true));
        campoDiaDataDaVenda.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                campoDiaDataDaVendaFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                campoDiaDataDaVendaFocusLost(evt);
            }
        });
        campoDiaDataDaVenda.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                campoDiaDataDaVendaKeyReleased(evt);
            }
        });
        add(campoDiaDataDaVenda, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 50, 40, 30));

        campoMesDataDaVenda.setDocument(new TeclasPermitidasParaData());
        campoMesDataDaVenda.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        campoMesDataDaVenda.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        campoMesDataDaVenda.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(204, 204, 204), 1, true));
        campoMesDataDaVenda.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                campoMesDataDaVendaFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                campoMesDataDaVendaFocusLost(evt);
            }
        });
        campoMesDataDaVenda.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                campoMesDataDaVendaKeyReleased(evt);
            }
        });
        add(campoMesDataDaVenda, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 50, 40, 30));

        txtDataEntega1.setFont(new java.awt.Font("Yu Gothic", 0, 18)); // NOI18N
        txtDataEntega1.setText("Data da Venda:");
        add(txtDataEntega1, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 50, -1, 30));

        txtDataEntega2.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        txtDataEntega2.setForeground(new java.awt.Color(204, 204, 204));
        txtDataEntega2.setText("/");
        add(txtDataEntega2, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 50, -1, 30));
    }// </editor-fold>//GEN-END:initComponents


    public static void selecionarCorretores() {
        facade.listarCorretoresPeloNome();
        for (CorretorBean corretorBean : Dados.listaDeCorretoresVenderImovel) {
            campoSelecioneCorretorDaVenda.addItem(corretorBean.getNome()); 
        }
                
    }
    
    public static void selecionarImoveisDisponiveisParaVenda() {
        facade.listarCodigoDosImoveisVender();
        for (ImovelBean imovelBean : Dados.listaDeImoveisVenderImovel) {
            campoSelecioneImovelDaVenda.addItem(String.valueOf(imovelBean.getCodigo()));          
        }
            
    }
    
    public static void selecionarClientes() {
        facade.ordenarClientesPeloNome();
        for (ClientePessoaResumoBean clientePessoaResumoBean : Dados.listaDeClientesResumo) {
            campoSelecioneClienteDaCompra.addItem(clientePessoaResumoBean.getCliente());          
        }
            
    }
    
    private void campoSelecioneCorretorDaVendaFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_campoSelecioneCorretorDaVendaFocusGained
        campoSelecioneCorretorDaVenda.setBackground(new Color(0,204,204));
        //campoSelecioneCorretorDaVenda.setForeground(Color.WHITE);
       
    }//GEN-LAST:event_campoSelecioneCorretorDaVendaFocusGained

    private void campoSelecioneCorretorDaVendaFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_campoSelecioneCorretorDaVendaFocusLost
        campoSelecioneCorretorDaVenda.setBackground(Color.WHITE);
        campoSelecioneCorretorDaVenda.setForeground(Color.BLACK);
        
        campoSelecioneCorretorDaVenda.setBorder(new LineBorder(new Color(0,204,204)));
        
    }//GEN-LAST:event_campoSelecioneCorretorDaVendaFocusLost

    private void campoValorNegociadoDaVendaFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_campoValorNegociadoDaVendaFocusGained
        // TODO add your handling code here:
    }//GEN-LAST:event_campoValorNegociadoDaVendaFocusGained

    private void campoValorNegociadoDaVendaFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_campoValorNegociadoDaVendaFocusLost
        // TODO add your handling code here:
    }//GEN-LAST:event_campoValorNegociadoDaVendaFocusLost

    private boolean validarCamposVenderImovel() {
        if( (!campoDiaDataDaVenda.getText().isEmpty()) && (!campoMesDataDaVenda.getText().isEmpty()) && (!campoAnoDataDaVenda.getText().isEmpty()) && (campoSelecioneCorretorDaVenda.getSelectedIndex() != 0) && (campoSelecioneImovelDaVenda.getSelectedIndex() != 0 ) && (campoSelecioneClienteDaCompra.getSelectedIndex() != 0) && (!campoValorNegociadoDaVenda.getText().isEmpty()) ){
            return true;
        }else{
           return false; 
        }
    }

    VenderImovelBean venderImovelBean;
    private void botaoVenderImovelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaoVenderImovelActionPerformed

        if(validarCamposVenderImovel() == true){
        
            execute();
            
            /*
            String dataDaVenda = campoDiaDataDaVenda.getText() + "/" + campoMesDataDaVenda.getText() + "/" + campoAnoDataDaVenda.getText();

            venderImovelBean = new VenderImovelBean();
            venderImovelBean.setDataDaVenda(dataDaVenda);
            venderImovelBean.setCorretor(campoSelecioneCorretorDaVenda.getSelectedItem().toString());
            venderImovelBean.setImovel(campoSelecioneImovelDaVenda.getSelectedItem().toString());
            venderImovelBean.setCliente(campoSelecioneClienteDaCompra.getSelectedItem().toString());
            venderImovelBean.setValorNegociado(campoValorNegociadoDaVenda.getText().trim());

            facade.cadastrarVendaDoImovel(venderImovelBean);

            PainelDeDialogoCadastrarVenderImovel dialogoCadastrarVenderImovel = new PainelDeDialogoCadastrarVenderImovel(null, true);
            PainelDeDialogoCadastrarVenderImovel.textoCadastroDialogoVenderImovel.setText("Cadastro realizado!");
            dialogoCadastrarVenderImovel.setLocationRelativeTo(null);
            dialogoCadastrarVenderImovel.setVisible(true);
            
            facade.alterarStatusDoImovel(Integer.parseInt(campoSelecioneImovelDaVenda.getSelectedItem().toString()));

            campoSelecioneImovelDaVenda.removeItem(campoSelecioneImovelDaVenda.getSelectedItem().toString());

            limparCamposVenderImovel();

            TelaPrincipalDoSistema.exibirPainelPesquisarVenderImovel();
            PainelPesquisarVenderImovel.mostrarTabelaVenderImovel();

            botaoBuscarVendaDeImovel.setEnabled(false);
            TelaPrincipalDoSistema.botaoEditarVenderImovel.setVisible(true);
            TelaPrincipalDoSistema.botaoExcluirVenderImovel.setVisible(true);
            */
     
        }else{
           PainelDeDialogoVenderImovel dialogoVenderImovel = new PainelDeDialogoVenderImovel(null, true);
           PainelDeDialogoVenderImovel.textoNomeDialogoVenderImovel.setText("Campo(s) inválido(s)!");
           dialogoVenderImovel.setLocationRelativeTo(null);
           dialogoVenderImovel.setVisible(true); 
        }
    }//GEN-LAST:event_botaoVenderImovelActionPerformed

    Double numero;

    Calendar calendarioPadrao = Calendar.getInstance();
    private void botaoLimparCamposDaVendaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaoLimparCamposDaVendaActionPerformed
        limparCamposVenderImovel();
    }//GEN-LAST:event_botaoLimparCamposDaVendaActionPerformed

    public static Double valorNegociadoAuxiliar = 0.0;
    private void campoSelecioneImovelDaVendaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_campoSelecioneImovelDaVendaActionPerformed

        //DecimalFormat formatandoNumero = new DecimalFormat("#,##0.00");

        if (campoSelecioneImovelDaVenda.getSelectedIndex() == 0) {
            campoValorNegociadoDaVenda.setText("R$ 0,00");
        } 
        else {
            Dados.ImovelEstatico = campoSelecioneImovelDaVenda.getSelectedItem().toString().trim();    
            facade.listarCodigoDosImoveisVender();
            for (ImovelBean imovelBean : Dados.listaDeImoveisVenderImovel) {
                
                if (imovelBean.getCodigo().toString().equals(campoSelecioneImovelDaVenda.getSelectedItem().toString().trim())) {
                    //valorNegociadoAuxiliar = imovelBean.getValorCobrado();
                    //valorNegociadoAuxiliar = imovelBean.getValorCobrado();
                    campoValorNegociadoDaVenda.setText(imovelBean.getValorCobrado());  
                    
                    valorNegociadoAuxiliar = Double.parseDouble(converteValorBRemEUA(imovelBean.getValorCobrado()));
                }         
            }
            //campoSelecioneNumeroDias.requestFocus();
        }
        
        campoSelecioneClienteDaCompra.setSelectedIndex(0);
        
        
    }//GEN-LAST:event_campoSelecioneImovelDaVendaActionPerformed

    private String converteValorBRemEUA(String valorEmBR){
        // esta assim R$ 80.000,90
        
        String removeRS = valorEmBR.replace("R$", "").trim();
        // fica assim 80.000,90
        
        String subistituiVirgulaPorPonto = removeRS.replace(',', 'a').trim();
        // fica assim 80.000a90
        
        String removePonto = subistituiVirgulaPorPonto.replace(".", "").trim();
         // fica assim 80000a90
          
        String fiaal = removePonto.replace('a', '.');
        // fica assim 80000.90
        
        String finall = fiaal;
        
        return finall;
    }
    
    
    private void campoSelecioneImovelDaVendaFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_campoSelecioneImovelDaVendaFocusGained
        campoSelecioneImovelDaVenda.setBackground(new Color(0,204,204));
        //campoSelecioneImovelDaVenda.setForeground(Color.WHITE);      
    }//GEN-LAST:event_campoSelecioneImovelDaVendaFocusGained

    private void campoSelecioneImovelDaVendaFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_campoSelecioneImovelDaVendaFocusLost
        campoSelecioneImovelDaVenda.setBackground(Color.WHITE);
        campoSelecioneImovelDaVenda.setForeground(Color.BLACK);   
        
        campoSelecioneImovelDaVenda.setBorder(new LineBorder(new Color(0,204,204)));
    }//GEN-LAST:event_campoSelecioneImovelDaVendaFocusLost

    private void campoSelecioneCorretorDaVendaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_campoSelecioneCorretorDaVendaActionPerformed

        //Dados.CorretorEstatico = campoSelecioneCorretorDaVenda.getSelectedItem().toString().trim();
    }//GEN-LAST:event_campoSelecioneCorretorDaVendaActionPerformed

    private void campoAnoDataDaVendaKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_campoAnoDataDaVendaKeyReleased
        if(campoAnoDataDaVenda.getText().length() == 4){
            campoSelecioneCorretorDaVenda.requestFocus();
        }
    }//GEN-LAST:event_campoAnoDataDaVendaKeyReleased

    private void campoAnoDataDaVendaFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_campoAnoDataDaVendaFocusLost
        campoAnoDataDaVenda.setBorder(new LineBorder(new Color(204,204,204),1,true));
    }//GEN-LAST:event_campoAnoDataDaVendaFocusLost

    private void campoAnoDataDaVendaFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_campoAnoDataDaVendaFocusGained
        campoAnoDataDaVenda.setBorder(new LineBorder(new Color(0,204,204),2,true));
    }//GEN-LAST:event_campoAnoDataDaVendaFocusGained

    private void campoSelecioneClienteDaCompraFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_campoSelecioneClienteDaCompraFocusGained
        campoSelecioneClienteDaCompra.setBackground(new Color(0,204,204));
        //campoSelecioneClienteDaCompra.setForeground(Color.WHITE);     
    }//GEN-LAST:event_campoSelecioneClienteDaCompraFocusGained

    private void campoSelecioneClienteDaCompraFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_campoSelecioneClienteDaCompraFocusLost
        campoSelecioneClienteDaCompra.setBackground(Color.WHITE);
        campoSelecioneClienteDaCompra.setForeground(Color.BLACK);  
        
        campoSelecioneClienteDaCompra.setBorder(new LineBorder(new Color(0,204,204)));
    }//GEN-LAST:event_campoSelecioneClienteDaCompraFocusLost

   
    public static Double valorAuxiliarFinal = 0.0;
    private void campoSelecioneClienteDaCompraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_campoSelecioneClienteDaCompraActionPerformed
        
        if (campoSelecioneClienteDaCompra.getSelectedIndex() != 0) {
            
            facade.ordenarClientesPeloNome();
            
            for(ClientePessoaResumoBean clientePessoaResumoBean: Dados.listaDeClientesResumo){
                if( (clientePessoaResumoBean.getCliente().equals(campoSelecioneClienteDaCompra.getSelectedItem().toString().trim())) &&  (clientePessoaResumoBean.getTipo().equals("Pessoa Física")) ){
                    valorAuxiliarFinal = valorNegociadoAuxiliar;
                    campoValorNegociadoDaVenda.setText(DecimalFormat.getCurrencyInstance().format(valorNegociadoAuxiliar));
                }else if((clientePessoaResumoBean.getCliente().equals(campoSelecioneClienteDaCompra.getSelectedItem().toString().trim())) &&  (clientePessoaResumoBean.getTipo().equals("Pessoa Jurídica"))){
                    Double valor = valorNegociadoAuxiliar;
                    Double valorFinalComDesconto = valor * 0.835; 
                    valorAuxiliarFinal = valorFinalComDesconto;
                    campoValorNegociadoDaVenda.setText(DecimalFormat.getCurrencyInstance().format(valorFinalComDesconto));
                } 
               
            }   
            
             
        }        
                       
        
    }//GEN-LAST:event_campoSelecioneClienteDaCompraActionPerformed

    private void campoDiaDataDaVendaFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_campoDiaDataDaVendaFocusGained
        campoDiaDataDaVenda.setBorder(new LineBorder(new Color(0,204,204),2,true));
    }//GEN-LAST:event_campoDiaDataDaVendaFocusGained

    private void campoDiaDataDaVendaFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_campoDiaDataDaVendaFocusLost
        campoDiaDataDaVenda.setBorder(new LineBorder(new Color(204,204,204),1,true));
    }//GEN-LAST:event_campoDiaDataDaVendaFocusLost

    private void campoDiaDataDaVendaKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_campoDiaDataDaVendaKeyReleased
        if(campoDiaDataDaVenda.getText().length() == 2){
            campoMesDataDaVenda.requestFocus();
        }
    }//GEN-LAST:event_campoDiaDataDaVendaKeyReleased

    private void campoMesDataDaVendaFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_campoMesDataDaVendaFocusGained
        campoMesDataDaVenda.setBorder(new LineBorder(new Color(0,204,204),2,true));
    }//GEN-LAST:event_campoMesDataDaVendaFocusGained

    private void campoMesDataDaVendaFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_campoMesDataDaVendaFocusLost
        campoMesDataDaVenda.setBorder(new LineBorder(new Color(204,204,204),1,true));
    }//GEN-LAST:event_campoMesDataDaVendaFocusLost

    private void campoMesDataDaVendaKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_campoMesDataDaVendaKeyReleased
        if(campoMesDataDaVenda.getText().length() == 2){
            campoAnoDataDaVenda.requestFocus();
        }
    }//GEN-LAST:event_campoMesDataDaVendaKeyReleased

    private void campoAnoDataDaVendaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_campoAnoDataDaVendaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_campoAnoDataDaVendaActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    public static javax.swing.ButtonGroup botaoGrupoContrato;
    public static javax.swing.ButtonGroup botaoGrupoPeriodo;
    public static javax.swing.JButton botaoLimparCamposDaVenda;
    public static javax.swing.JButton botaoVenderImovel;
    public static javax.swing.JTextField campoAnoDataDaVenda;
    public static javax.swing.JTextField campoDiaDataDaVenda;
    public static javax.swing.JTextField campoMesDataDaVenda;
    public static javax.swing.JComboBox<String> campoSelecioneClienteDaCompra;
    public static javax.swing.JComboBox<String> campoSelecioneCorretorDaVenda;
    public static javax.swing.JComboBox<String> campoSelecioneImovelDaVenda;
    public static javax.swing.JTextField campoValorNegociadoDaVenda;
    public static javax.swing.JLabel jLabel2;
    public static javax.swing.JLabel jLabel3;
    public static javax.swing.JLabel jLabel4;
    public static javax.swing.JLabel jLabel6;
    public static javax.swing.JScrollPane jScrollPane1;
    public static javax.swing.JTextArea jTextArea1;
    public static javax.swing.JLabel txtDataEntega;
    public static javax.swing.JLabel txtDataEntega1;
    public static javax.swing.JLabel txtDataEntega2;
    // End of variables declaration//GEN-END:variables

    private void limparCamposVenderImovel() {
        campoDiaDataDaVenda.setText(null);
        campoMesDataDaVenda.setText(null);
        campoAnoDataDaVenda.setText(null);
        campoSelecioneCorretorDaVenda.setSelectedIndex(0);
        campoSelecioneImovelDaVenda.setSelectedIndex(0);
        campoSelecioneClienteDaCompra.setSelectedIndex(0);
        campoValorNegociadoDaVenda.setText("R$ 0,00");  
        campoDiaDataDaVenda.requestFocus();
    }

    @Override
    public void execute() {
        String dataDaVenda = campoDiaDataDaVenda.getText() + "/" + campoMesDataDaVenda.getText() + "/" + campoAnoDataDaVenda.getText();

        venderImovelBean = new VenderImovelBean();
        venderImovelBean.setDataDaVenda(dataDaVenda);
        venderImovelBean.setCorretor(campoSelecioneCorretorDaVenda.getSelectedItem().toString());
        venderImovelBean.setImovel(campoSelecioneImovelDaVenda.getSelectedItem().toString());
        venderImovelBean.setCliente(campoSelecioneClienteDaCompra.getSelectedItem().toString());
        venderImovelBean.setValorNegociado(campoValorNegociadoDaVenda.getText().trim());

        facade.cadastrarVendaDoImovel(venderImovelBean);

        PainelDeDialogoCadastrarVenderImovel dialogoCadastrarVenderImovel = new PainelDeDialogoCadastrarVenderImovel(null, true);
        PainelDeDialogoCadastrarVenderImovel.textoCadastroDialogoVenderImovel.setText("Cadastro realizado!");
        dialogoCadastrarVenderImovel.setLocationRelativeTo(null);
        dialogoCadastrarVenderImovel.setVisible(true);

        facade.alterarStatusDoImovel(Integer.parseInt(campoSelecioneImovelDaVenda.getSelectedItem().toString()));

        campoSelecioneImovelDaVenda.removeItem(campoSelecioneImovelDaVenda.getSelectedItem().toString());

        limparCamposVenderImovel();

        TelaPrincipalDoSistema.exibirPainelPesquisarVenderImovel();
        PainelPesquisarVenderImovel.mostrarTabelaVenderImovel();

        botaoBuscarVendaDeImovel.setEnabled(false);
        TelaPrincipalDoSistema.botaoEditarVenderImovel.setVisible(true);
        TelaPrincipalDoSistema.botaoExcluirVenderImovel.setVisible(true);

    }


}
